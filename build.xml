<!-- Ant build file based on the information given at 
     http://www.rubiconred.com/blog/build-package-a-gwt-app-to-war-using-ant/ -->
<project name="cilsearch" basedir="." default="war">
	<property name="gwt.module.name" value="de.cil2012.cilsearch.CILSearch"/>
    <property name="server.resources.name" value="server_resources"/>
    <property name="jar.name" value="cilsearch.jar"/>
    <property name="war.name" value="cilsearch.war"/>
    <property name="src.dir" location="src"/>
    <property name="server.resources.dir" location="war/${server.resources.name}"/>
    <property name="build.dir" location="build"/>    
    <property name="build.server.resources.dir" location="war/WEB-INF/classes/${server.resources.name}"/>        
    <property name="lib.dir" location="war/WEB-INF/lib"/>
	<property name="gwt.lib.dir" location="lib"/>
    <property name="gwt.client.dir" location="de/cil2012/cilsearch/client"/>
    <property name="dist.dir" location="dist"/>  

	<!-- All *.jar files in our war/WEB-INF/lib directory -->
	<path id="project.classpath">        
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
	
	<path id="gwt.classpath">        
        <fileset dir="${gwt.lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
 
    <target name="prepare">
    	<mkdir dir="${build.dir}" />
    	<mkdir dir="${dist.dir}" />
    </target>
    
    <target name="clean">
    	<delete dir="${build.dir}" />
    	<delete dir="${dist.dir}" />
    	<delete file="${lib.dir}/${jar.name}" />
    	<delete dir="${build.server.resources.dir}" />
    </target>
    
    <!-- Compile the java source code using javac -->
    <target name="compile" depends="prepare">
    	<javac srcdir="${src.dir}" destdir="${build.dir}" includeAntRuntime="">
    		<classpath refid="project.classpath" />
    		<classpath refid="gwt.classpath"/>
    	</javac>
    </target>        
    
    <!-- Invoke the GWT compiler to create the Javascript for us -->
    <target name="gwt-compile" depends="compile">
    	<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
           <classpath>
               <!-- src dir is added to ensure the module.xml file(s) are on the classpath -->
               <pathelement location="${src.dir}"/>                
               <pathelement location="${build.dir}"/>
               <path refid="project.classpath"/>
           	   <path refid="gwt.classpath"/>
           </classpath>
           <jvmarg value="-Xmx256M"/>
           <arg value="${gwt.module.name}"/>
           <arg value="-strict"/>
        </java>
    </target>
    
    <!-- Package the compiled Java source into a JAR file -->
    <target name="jar" depends="compile">
    	<jar jarfile="${lib.dir}/${jar.name}" basedir="${build.dir}/">
            <!-- Don't wrap any of the client only code into the JAR -->
            <exclude name="${gwt.client.dir}/**/*.class"/>
        </jar> 
    </target>  
    
    <!-- Copy the static server resources into the required 
    directory ready for packaging -->    
    <target name="copy-resources">
    	<copy todir="${build.server.resources.dir}" preservelastmodified="true">
            <fileset dir="${server.resources.dir}"/>            
        </copy>
    </target>  
    
    <!-- Package the JAR file, Javascript, static resources 
    and external libraries into a WAR file -->
    <target name="war" depends="gwt-compile, jar, copy-resources">
    	<war basedir="war" destfile="${dist.dir}/${war.name}" webxml="war/WEB-INF/web.xml">
            <exclude name="WEB-INF/**" />
            <exclude name="${server.resources.name}/**"/>
            <webinf dir="war/WEB-INF/">
                <include name="classes/${server.resources.name}/**" />
                <include name="**/*.jar" />
            </webinf>
        </war>
    </target>
    
    <!-- Deploy the WAR file (optional) -->
    <target name="deploy" depends="war"/>
    
</project>